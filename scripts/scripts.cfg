#!/bin/bash

#################### PATHS & DIRS ###################
BASEPATH="$PWD"

NEXEC=10
NTHREADS="1 2 3 4"

# STAMP
STAMP="$BASEPATH/stamp"

# MICROBENCH
MICROBENCH="$BASEPATH/microbench"

# tinySTM
tinySTM="$BASEPATH/tinySTM"

# WLPDSTM
WLPDSTM="$BASEPATH/wlpdstm"

# phasedTM
PhasedTM="$BASEPATH/phasedTM"
phasedTM="NOrec"

# Intel TSX & PowerTM
HTM="$BASEPATH/htm"

# NOrec
NOrec="$BASEPATH/NOrec"
norec="NOrec"
# RH_NOrec
rh_norec="RH_NOrec"
# HyTM_NOrec
hytm_norec_eager="HyTM_NOrec"
hytm_norec_lazy="HyTM_NOrec"
# Hybrid Cohorts
hyco="HyCo"

# NV-HTM dependencies
MINIMAL_NVM="$BASEPATH/nvhtm/minimal_nvm"
NVM_HTM_ALG="$BASEPATH/nvhtm/htm_alg"
NVM="$BASEPATH/nvhtm/nh"

# NVM/HTM solutions
nvm_htm="HTM"
nvm_phtm="AVNI"
nvm_nvhtm_lc="NVHTM_LC"
nvm_nvhtm_pc="NVHTM_PC"
nvm_rtm="NVHTM_PC"

nvphtm="NOrec"
nvphtm_pstm="NOrec"
nvphtm_pstm_nh="NOrec"
pstm="NOrec"
pstm_chk="NOrec"

# Checkpoint routines used in NV-HTM
PERIODIC=1
REACTIVE=2
NO_MANAGER=3
WRAP=4
FORK=5

SCRIPTSDIR="$BASEPATH/scripts"

RESULTDIR="$BASEPATH/results"
LOGDIR="$RESULTDIR/logs"     # raw output files
DATADIR="$RESULTDIR/data"    # post-processed raw file
TABDIR="$RESULTDIR/tables"   # .tex table files
GRAPHDIR="$RESULTDIR/graphs" # generated graphs

ALLOCSDIR="$BASEPATH/allocators"

MSRDIR="$BASEPATH/msr"
#################### PATHS & DIRS ###################


################### BUILD CONFIGS ###################
MAKE_OPTIONS='--quiet --no-keep-going'
BUILDS='tinystm seq lock hle rtm powerTM norec rh_norec'
BUILDS="$BUILDS hytm_norec_eager hytm_norec_lazy phasedTM wlpdstm hyco"
BUILDS="$BUILDS pstm nvm_htm nvm_phtm nvm_nvhtm_lc nvm_nvhtm_pc"
BUILDS="$BUILDS nvphtm pstm_chk nvphtm_pstm nvphtm_pstm_nh nvm_rtm pstm_tinystm"

# memory allocators
MEMALLOCS='ptmalloc tcmalloc hoard tbbmalloc ibmptmalloc ibmtcmalloc'
ptmalloc=''
tcmalloc="$ALLOCSDIR/libtcmalloc_minimal.so"
hoard="$ALLOCSDIR/libhoard.so"
tbbmalloc="$ALLOCSDIR/libtbbmalloc.so.2"
ibmptmalloc="$ALLOCSDIR/libibmmalloc.so"
ibmtcmalloc="$ALLOCSDIR/libibmmalloc.so:$ALLOCSDIR/libtcmalloc_minimal.so"

# frequency governors
GOVERNORS='powersave conservative ondemand userspace performance'
################### BUILD CONFIGS ###################


###################### TinySTM ######################
tinySTM_DESIGNS='ETL CTL WT'
tinySTM_CMS='SUICIDE DELAY BACKOFF'
ETL='# DEFINES += -DDESIGN=WRITE_BACK_ETL'
CTL='# DEFINES += -DDESIGN=WRITE_BACK_CTL'
WT='# DEFINES += -DDESIGN=WRITE_THROUGH'
SUICIDE='# DEFINES += -DCM=CM_SUICIDE'
DELAY='# DEFINES += -DCM=CM_DELAY'
BACKOFF='# DEFINES += -DCM=CM_BACKOFF'

NO_DUPLICATES_IN_RW_SETS='# DEFINES += -UNO_DUPLICATES_IN_RW_SETS'

ORT_HASHES="ORIGINAL CONSTANT XOR MULT"
ORIGINAL='# DEFINES += -DHASHFUNCTION=ORIGINAL_HASH'
CONSTANT='# DEFINES += -DHASHFUNCTION=CONSTANT_HASH'
XOR='# DEFINES += -DHASHFUNCTION=XOR_HASH'
MULT='# DEFINES += -DHASHFUNCTION=MULT_HASH'
###################### TinySTM ######################

###################### WLPDSTM ######################
wlpdstm_DESIGNS='swisstm epochstm tlrw rw p-tlrw dynamic'
###################### TinySTM ######################

###################### STAMP ########################
STAMP_APPS='bayes genome intruder kmeans labyrinth ssca2 vacation yada'
WORK_SIZES="small medium large"
EXEC_FLAG_bayes_small='-v32 -r1024 -n2 -p20 -i2 -e2 -t'
EXEC_FLAG_bayes_medium='-v32 -r4096 -n2 -p20 -i2 -e2 -t'
EXEC_FLAG_bayes_large='-v32 -r4096 -n10 -p40 -i2 -e8 -s1 -t'

EXEC_FLAG_genome_small='-g256 -s16 -n16384 -t'
EXEC_FLAG_genome_medium='-g512 -s32 -n32768 -t'
EXEC_FLAG_genome_large='-g16384 -s64 -n16777216 -t'

EXEC_FLAG_intruder_small='-a10 -l4 -n2048 -s1 -t'
EXEC_FLAG_intruder_medium='-a10 -l16 -n4096 -s1 -t'
EXEC_FLAG_intruder_large='-a10 -l128 -n262144 -s1 -t'

EXEC_FLAG_kmeans_small='-m15 -n15 -T0.05 -i stamp/data/kmeans/inputs/random-n2048-d16-c16.txt -t'
EXEC_FLAG_kmeans_medium='-m15 -n15 -T0.05 -i stamp/data/kmeans/inputs/random-n16384-d24-c16.txt -t'
EXEC_FLAG_kmeans_large='-m15 -n15 -T0.00001 -i stamp/data/kmeans/inputs/random-n65536-d32-c16.txt -t'

EXEC_FLAG_labyrinth_small='-i stamp/data/labyrinth/inputs/random-x32-y32-z3-n96.txt -t'
EXEC_FLAG_labyrinth_medium='-i stamp/data/labyrinth/inputs/random-x48-y48-z4-n64.txt -t'
EXEC_FLAG_labyrinth_large='-i stamp/data/labyrinth/inputs/random-x512-y512-z7-n512.txt -t'

EXEC_FLAG_ssca2_small='-s13 -i1.0 -u1.0 -l3 -p3 -t'
EXEC_FLAG_ssca2_medium='-s14 -i1.0 -u1.0 -l9 -p9 -t'
EXEC_FLAG_ssca2_large='-s20 -i1.0 -u1.0 -l3 -p3 -t'

EXEC_FLAG_vacation_small='-n4 -q60 -u90 -r16384 -T4096 -t'
EXEC_FLAG_vacation_medium='-n4 -q60 -u90 -r1048576 -T4096 -t'
EXEC_FLAG_vacation_large='-n4 -q60 -u90 -r1048576 -T4194304 -t'

EXEC_FLAG_yada_small='-a20 -i stamp/data/yada/inputs/633.2 -t'
EXEC_FLAG_yada_medium='-a10 -i stamp/data/yada/inputs/ttimeu10000.2 -t'
EXEC_FLAG_yada_large='-a15 -i stamp/data/yada/inputs/ttimeu1000000.2 -t'
###################### STAMP ########################


################### MICROBENCH ######################
MICROBENCH_APPS="intset_hs intset_ll intset_rb intset_sl conflict capacity"

INITSIZES="4096"
UPDATERATES="0 20 60"

PHASECONFIGS="m2-LL:4096:20-RB:4096:20 m2-LL:4096:20-RB:4096:60 m2-RB:4096:20-LL:4096:20 m2-RB:4096:20-LL:4096:60"

NBTREES='350'
################### MICROBENCH ######################


####################### TSX #########################
TSX_LOCKS='simple_lock hle_lock'
####################### TSX #########################


##################### PHASEDTM ######################
PHASEDTM_STMS='tinystm norec'
PHASEDTM_DESIGNS='PROTOTYPE OPTIMIZED'
PROTOTYPE='# DEFINES += -DDESIGN=PROTOTYPE'
OPTIMIZED='# DEFINES += -DDESIGN=OPTIMIZED'
##################### PHASEDTM ######################

#################### HyTM-NOrec #####################
HYTM_EAGER='# DEFINES += -DHYTM_EAGER'
HYTM_LAZY='# DEFINES += -DHYTM_LAZY'
#################### HyTM-NOrec #####################


################ UTILITY FUNCTIONS  #################
function cross_product {
	local i=2
	local tmp="$1"
	
	while [ ! -z "${!i}" ]; do
		tmp="$(eval echo -n {${tmp// /,}}-{${!i// /,}} | sed 's|{||g;s|}||g')"
		i=$((i+1))
	done
	echo -n "$tmp"
}

function cross_product2 {
	#local i=2
	#local tmp="$1"
	
	#while [ ! -z "${!i}" ]; do
		#tmp="$(eval echo -n {${tmp// /,}}{${!i// /,}} | sed 's|{||g;s|}||g')"
		local tmp="$(eval echo -n {${1// /,}}{${2// /,}} | sed 's|{||g;s|}||g')"
		#i=$((i+1))
	#done
	echo -n "$tmp"
}
################ UTILITY FUNCTIONS  #################
